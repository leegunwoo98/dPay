{"ast":null,"code":"\nimport { validateUsername, validatePassword } from \"./Validation.js\";\nimport { Login } from \"../API/Login.js\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nvar LoginCheck = function LoginCheck(username, password, _ref) {\n  var setUser = _ref.setUser,\n    setPageID = _ref.setPageID;\n  console.log(username);\n  console.log(password);\n  var usernamePrompt = validateUsername(username);\n  var passwordPrompt = validatePassword(password);\n  var loginSuccessful = false;\n  var userID = null;\n  if (usernamePrompt !== null) {\n    alert(usernamePrompt);\n  } else if (passwordPrompt !== null) {\n    alert(passwordPrompt);\n  } else {\n    var user = Login(username, password);\n    e;\n    console.log(user);\n    if (user != null) {\n      try {\n        AsyncStorage.setItem(\"userName\", username);\n        AsyncStorage.setItem(\"password\", password);\n      } catch (error) {\n        alert(error);\n      }\n      alert(\"Login Successful\");\n      setUser(user);\n      setPageID(\"home\");\n    } else {\n      alert(\"Login Unsuccessful\");\n    }\n  }\n};\n\nexport { LoginCheck };","map":{"version":3,"names":["validateUsername","validatePassword","Login","AsyncStorage","LoginCheck","username","password","setUser","setPageID","console","log","usernamePrompt","passwordPrompt","loginSuccessful","userID","alert","user","e","setItem","error"],"sources":["/Users/gunwoo/Library/CloudStorage/OneDrive-Personal/College/2022Fall/hackathon/dPay/client/Login/LoginCheck.js"],"sourcesContent":["//create a function to check username and password\nimport {validateUsername, validatePassword} from \"./Validation.js\"\nimport {Login} from \"../API/Login.js\"\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nconst LoginCheck = (username,password, {setUser,setPageID}) =>{\n\n    console.log(username);\n    console.log(password)\n    var usernamePrompt= validateUsername(username)\n    var passwordPrompt = validatePassword(password)\n    var loginSuccessful=false;\n    var userID=null\n    if (usernamePrompt !== null) {\n        alert(usernamePrompt)\n        \n    }\n    else if (passwordPrompt !== null) {\n        alert(passwordPrompt)\n    }\n    else {\n        //check database for username and password\n        const user = Login(username,password)\n        e\n        console.log(user)\n        if(user!=null){\n            try{\n                AsyncStorage.setItem(\"userName\",username)\n                AsyncStorage.setItem(\"password\",password)\n            }\n            catch(error){\n                alert(error)\n            }\n            alert(\"Login Successful\")\n            setUser(user)\n            setPageID(\"home\")\n        }\n        else{\n            //store username and password in local storageKey\n            alert(\"Login Unsuccessful\")\n        }\n        \n    }\n}\n\n//export function LoginCheck\nexport {LoginCheck}"],"mappings":";AACA,SAAQA,gBAAgB,EAAEC,gBAAgB;AAC1C,SAAQC,KAAK;AACb,OAAOC,YAAY,MAAM,2CAA2C;AACpE,IAAMC,UAAU,GAAG,SAAbA,UAAU,CAAIC,QAAQ,EAACC,QAAQ,QAAyB;EAAA,IAAtBC,OAAO,QAAPA,OAAO;IAACC,SAAS,QAATA,SAAS;EAErDC,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;EACrBI,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;EACrB,IAAIK,cAAc,GAAEX,gBAAgB,CAACK,QAAQ,CAAC;EAC9C,IAAIO,cAAc,GAAGX,gBAAgB,CAACK,QAAQ,CAAC;EAC/C,IAAIO,eAAe,GAAC,KAAK;EACzB,IAAIC,MAAM,GAAC,IAAI;EACf,IAAIH,cAAc,KAAK,IAAI,EAAE;IACzBI,KAAK,CAACJ,cAAc,CAAC;EAEzB,CAAC,MACI,IAAIC,cAAc,KAAK,IAAI,EAAE;IAC9BG,KAAK,CAACH,cAAc,CAAC;EACzB,CAAC,MACI;IAED,IAAMI,IAAI,GAAGd,KAAK,CAACG,QAAQ,EAACC,QAAQ,CAAC;IACrCW,CAAC;IACDR,OAAO,CAACC,GAAG,CAACM,IAAI,CAAC;IACjB,IAAGA,IAAI,IAAE,IAAI,EAAC;MACV,IAAG;QACCb,YAAY,CAACe,OAAO,CAAC,UAAU,EAACb,QAAQ,CAAC;QACzCF,YAAY,CAACe,OAAO,CAAC,UAAU,EAACZ,QAAQ,CAAC;MAC7C,CAAC,CACD,OAAMa,KAAK,EAAC;QACRJ,KAAK,CAACI,KAAK,CAAC;MAChB;MACAJ,KAAK,CAAC,kBAAkB,CAAC;MACzBR,OAAO,CAACS,IAAI,CAAC;MACbR,SAAS,CAAC,MAAM,CAAC;IACrB,CAAC,MACG;MAEAO,KAAK,CAAC,oBAAoB,CAAC;IAC/B;EAEJ;AACJ,CAAC;;AAGD,SAAQX,UAAU"},"metadata":{},"sourceType":"module"}